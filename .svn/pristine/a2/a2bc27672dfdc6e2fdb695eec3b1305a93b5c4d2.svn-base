package com.gaduo.webservice.LeafClass;

import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;

import javax.xml.namespace.QName;

import org.apache.axiom.om.OMElement;
import org.apache.log4j.Logger;

import com.gaduo.ihe.constants.ProvideAndRegistryDocumentSet_B_UUIDs;
import com.gaduo.webservice.LeafClass._interface.IEBXMLParser;
import com.gaduo.zk.model.KeyValue.KeyValuesImpl;

public class MetadataParser {
	public static Logger logger = Logger.getLogger(MetadataParser.class);
	private Map<String, KeyValuesImpl> mapArray = new TreeMap<String, KeyValuesImpl>();

	@SuppressWarnings({ "unchecked" })
	public MetadataParser(OMElement element) {
		OMElement firstLayer = element.getFirstElement();
		OMElement secondLayer = firstLayer.getFirstElement();
		Iterator<OMElement> list = null;
		if (firstLayer != null
				&& firstLayer.getLocalName().equals("RegistryObjectList")) {
			logger.info("firstLayer : " + firstLayer.getLocalName());
			list = firstLayer.getChildElements();
		}
		else if (secondLayer != null
				&& secondLayer.getLocalName().equals("RegistryObjectList")) {
			logger.info("secondLayer : " + secondLayer.getLocalName());
			list = secondLayer.getChildElements();
		}
		while (list != null && list.hasNext()) {
			OMElement e = list.next();
			String objectType = e.getAttributeValue(new QName("objectType"));
			logger.info(objectType);
			if (objectType != null) {
				String id = e.getAttributeValue(new QName("id"));
				if (objectType
						.equalsIgnoreCase(ProvideAndRegistryDocumentSet_B_UUIDs.SUBMISSON_SET_OBJECT)) {
					logger.info("SUBMISSON_SET_OBJECT");
					// KeyValuesImpl map = new KeyValuesImpl();
					// mapArray.put(id, map);
					// IEBXMLParser eo = new SubmissionSet();
					// eo.execute(e, map);
				}
				if (objectType
						.equalsIgnoreCase(ProvideAndRegistryDocumentSet_B_UUIDs.DOC_ENTRY_OBJECT)) {
					logger.info("DOC_ENTRY_OBJECT");
					KeyValuesImpl map = new KeyValuesImpl();
					mapArray.put(id, map);
					IEBXMLParser eo = new ExtrinsicObject();
					eo.execute(e, map);
				}
				if (objectType
						.equalsIgnoreCase(ProvideAndRegistryDocumentSet_B_UUIDs.FOLDER_OBJECT)) {
					logger.info("FOLDER_OBJECT");
					KeyValuesImpl map = new KeyValuesImpl();
					mapArray.put(id, map);
					IEBXMLParser rp = new RegistryPackage();
					rp.execute(e, map);
				}
				if (objectType
						.equalsIgnoreCase(ProvideAndRegistryDocumentSet_B_UUIDs.ASSOCIATION)) {
					logger.info("ASSOCIATION");
					KeyValuesImpl map = new KeyValuesImpl();
					mapArray.put(id, map);
					IEBXMLParser asso = new Association();
					asso.execute(e, map);
				}
			}

		}
	}

	public Map<String, KeyValuesImpl> getMapArray() {
		return mapArray;
	}

	public void setMapArray(Map<String, KeyValuesImpl> array) {
		this.mapArray = array;
	}

}
